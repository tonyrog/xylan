%% -*- mode: erlang -*-
%% Example server config file for the xylan application
%% Good practice is to make a local called xylan.config!
[
 {lager, [{log_root, "log"},
          {handlers, [
                      {lager_console_backend, info},
                      {lager_console_backend,
                       [debug, {lager_default_formatter,
                                [date, " ", time," [",severity,"] ",pid, " ",
                                 module, ":", line, " ", message, "\n"]}]},
                      {lager_file_backend,
                       [{file, "error.log"}, {level, warning},
                        {size, 10485760}, {date, "$D0"}, {count, 5}]},
                      {lager_file_backend,
                       [{file, "console.log"}, {level, info},
                        {size, 10485760}, {date, "$D0"}, {count, 5}]}
                     ]}
          ]},

 {xylan,
  [{mode, client},
   {id, "local"},                 %% id of client
   {server_id, "primary"},        %% optional local server id
   {server_ip, "127.0.0.1"},      %% connect to this address
   {server_port, 29390},          %% connect to this port
   {server_key, 3177648541185394227},   %% server is signing using this key
   {client_key, 12187761947737533676},  %% client is signing using this key
   {ping_interval, 20000},
   {pong_timeout,  3000},
   {reconnect_interval, 5000},
   {auth_timeout, 4000},
   {service_socket_options, [{sndbuf,4096},{rcvbuf,4096}]},
   {server_socket_options, [{sndbuf,8192},{rcvbuf,2048}]},
   {route,[
	   { [{data, "SSH-2.0.*"}],  [{port,22}] },
	   { [{data, "GET .*"}],     [{port,80}] }
	  ]}
  ]}

].

