%% -*- mode: erlang -*-
%% Example server config file for the xylan application
%% Good practice is to make a local copy called xylan.config!
[
 {lager, [{log_root, "log"},
          {handlers, [
                      {lager_console_backend, info},
                      {lager_console_backend,
                       [debug, {lager_default_formatter,
                                [date, " ", time," [",severity,"] ",pid, " ",
                                 module, ":", line, " ", message, "\n"]}]},
                      {lager_file_backend,
                       [{file, "error.log"}, {level, warning},
                        {size, 10485760}, {date, "$D0"}, {count, 5}]},
                      {lager_file_backend,
                       [{file, "console.log"}, {level, info},
                        {size, 10485760}, {date, "$D0"}, {count, 5}]}
                     ]}
          ]},

 %% xyw server config
 {xylan,
  [{mode, server},
   {id, "server"},   %% id of server (may be used when server is also client?)
   %% Listen port {interface-name,port} | {interface-ip,port} | port-number
   {port, [46122,
	   {"en1",2222},
	   {{127,0,0,1}, 2222}]},
   {client_port, 29390},  %% port where client connects
   {data_port,   29391},  %% client callback proxy port
   {auth_timeout, 5000},  %% client session auth timeout
   {data_timeout, 5000},  %% user initial data timeout
   {user_socket_options, [{send_timeout, 5000},{send_timeout_close,true}]},
   {client_socket_options, [{send_timeout, 20000},{send_timeout_close,true}]},
   {clients,  %% configure known clients
    [{"local",
      [
       %% Keys may be generated with xylan:generate_key(), if 64 bit 
       %% big-endian integer is enough. Otherwise any binary/io-list will do.
       {server_key, 3177648541185394227},   %% server is signing using this key
       {client_key, 12187761947737533676},  %% client is signing using this key
       {user_socket_options, [{sndbuf, 4096}]},
       {client_socket_options, [{sndbuf, 2048}]},
       {route,
	[
	 [{data, "SSH-2.0.*"}],   %% match port and initial
	 [{data, "GET .*"}]       %% match a specific url
	]}
      ]},

     {"mini",
      [
       {server_key, 8421305869361776827},  %% server is signing using this key
       {client_key, 8644215577236485799},  %% client is signing using this key
       {user_socket_options, [{sndbuf, 8192}]},       
       {route,
	[
	 [{data, "SSH-2.0.*"}],   %% match port and initial
	 [{data, "GET .*"}]       %% match a specific url
	]}
      ]}

    ]}
  ]}


].

